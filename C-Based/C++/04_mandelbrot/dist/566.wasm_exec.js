(self.webpackChunk=self.webpackChunk||[]).push([[566],{566:(e,t,r)=>{"use strict";var n;r.r(t),r.d(t,{default:()=>i});const i=(n="file:///workspace/C-Based/C++/04_mandelbrot/pkg/emscripten.js",function(e){function t(){return W.buffer!=B&&Q(W.buffer),H}function i(){return W.buffer!=B&&Q(W.buffer),z}function o(){return W.buffer!=B&&Q(W.buffer),q}function a(){return W.buffer!=B&&Q(W.buffer),Y}var s,c,l=void 0!==(e=e||{})?e:{};l.ready=new Promise((function(e,t){s=e,c=t})),["_main","__emscripten_thread_init","__emscripten_thread_exit","__emscripten_thread_crashed","__emscripten_tls_init","_pthread_self","executeNotifiedProxyingQueue","establishStackSpace","invokeEntryPoint","PThread","__Z3runv","_fflush","__emscripten_proxy_execute_task_queue","onRuntimeInitialized"].forEach((e=>{Object.getOwnPropertyDescriptor(l.ready,e)||Object.defineProperty(l.ready,e,{get:()=>be("You are getting "+e+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js"),set:()=>be("You are setting "+e+" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js")})}));var u=Object.assign({},l),d=[],f=(e,t)=>{throw t},p="object"==typeof window,m="function"==typeof importScripts,h="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,_=!p&&!h&&!m;if(l.ENVIRONMENT)throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)");var g,y,b,v=l.ENVIRONMENT_IS_PTHREAD||!1,T="";function w(e){return l.locateFile?l.locateFile(e,T):T+e}function E(e){if(e instanceof Le)return;let t=e;e&&"object"==typeof e&&e.stack&&(t=[e,e.stack]),L("exiting due to exception: "+t)}if(h){if("undefined"==typeof process||!process.release||"node"!==process.release.name)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");var S,k;let e;T=m?r(214).dirname(T)+"/":"//",S=r(679),k=r(214),g=(e,t)=>(e=k.normalize(e),S.readFileSync(e,t?void 0:"utf8")),b=e=>{var t=g(e,!0);return t.buffer||(t=new Uint8Array(t)),j(t.buffer),t},y=(e,t,r)=>{e=k.normalize(e),S.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Le))throw e})),process.on("unhandledRejection",(function(e){throw e})),f=(e,t)=>{if(ae())throw process.exitCode=e,t;E(t),process.exit(e)},l.inspect=function(){return"[Emscripten Module object]"};try{e=r(787)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}r.g.Worker=e.Worker}else if(_){if("object"==typeof process||"object"==typeof window||"function"==typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");"undefined"!=typeof read&&(g=function(e){return read(e)}),b=function(e){let t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(t=read(e,"binary"),j("object"==typeof t),t)},y=function(e,t,r){setTimeout((()=>t(b(e))),0)},"undefined"!=typeof scriptArgs?d=scriptArgs:void 0!==arguments&&(d=arguments),"function"==typeof quit&&(f=(e,t)=>{E(t),quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)}else{if(!p&&!m)throw new Error("environment detection error");if(m?T=self.location.href:"undefined"!=typeof document&&document.currentScript&&(T=document.currentScript.src),T=0!==(T=n).indexOf("blob:")?T.substr(0,T.replace(/[?#].*/,"").lastIndexOf("/")+1):"","object"!=typeof window&&"function"!=typeof importScripts)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");h||(g=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},m&&(b=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),y=(e,t,r)=>{var n=new XMLHttpRequest;n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=()=>{200==n.status||0==n.status&&n.response?t(n.response):r()},n.onerror=r,n.send(null)})}h&&"undefined"==typeof performance&&(r.g.performance=r(338).performance);var A=console.log.bind(console),I=console.warn.bind(console);h&&(A=e=>S.writeSync(1,e+"\n"),I=e=>S.writeSync(2,e+"\n"));var F,M=l.print||A,L=l.printErr||I;function C(e,t){Object.getOwnPropertyDescriptor(l,e)||Object.defineProperty(l,e,{configurable:!0,get:function(){be("Module."+e+" has been replaced with plain "+t+" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)")}})}function P(e){Object.getOwnPropertyDescriptor(l,e)&&be("`Module."+e+"` was supplied but `"+e+"` not included in INCOMING_MODULE_JS_API")}function R(e){return"FS_createPath"===e||"FS_createDataFile"===e||"FS_createPreloadedFile"===e||"FS_unlink"===e||"addRunDependency"===e||"FS_createLazyFile"===e||"FS_createDevice"===e||"removeRunDependency"===e}function O(e){"undefined"==typeof globalThis||Object.getOwnPropertyDescriptor(globalThis,e)||Object.defineProperty(globalThis,e,{configurable:!0,get:function(){var t="`"+e+"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line",r=e;r.startsWith("_")||(r="$"+e),t+=" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE="+r+")",R(e)&&(t+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),Je(t)}})}function x(e){Object.getOwnPropertyDescriptor(l,e)||Object.defineProperty(l,e,{configurable:!0,get:function(){var t="'"+e+"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)";R(e)&&(t+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),be(t)}})}Object.assign(l,u),u=null,yt(),l.arguments&&(d=l.arguments),C("arguments","arguments_"),l.thisProgram&&l.thisProgram,C("thisProgram","thisProgram"),l.quit&&(f=l.quit),C("quit","quit_"),j(void 0===l.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),j(void 0===l.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),j(void 0===l.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),j(void 0===l.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),j(void 0===l.read,"Module.read option was removed (modify read_ in JS)"),j(void 0===l.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),j(void 0===l.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),j(void 0===l.setWindowTitle,"Module.setWindowTitle option was removed (modify setWindowTitle in JS)"),j(void 0===l.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),C("read","read_"),C("readAsync","readAsync"),C("readBinary","readBinary"),C("setWindowTitle","setWindowTitle"),j(p||m||h,"Pthreads do not work in this environment yet (need Web Workers, or an alternative to them)"),j(!_,"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable."),Atomics.load,Atomics.store,Atomics.compareExchange,l.wasmBinary&&(F=l.wasmBinary),C("wasmBinary","wasmBinary");var W,U,D=l.noExitRuntime||!0;C("noExitRuntime","noExitRuntime"),"object"!=typeof WebAssembly&&be("no native wasm support detected");var N,G=!1;function j(e,t){e||be("Assertion failed"+(t?": "+t:""))}var B,H,z,q,Y,V="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function J(e,t,r){for(var n=t+r,i=t;e[i]&&!(i>=n);)++i;if(i-t>16&&e.buffer&&V)return V.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,i):e.subarray(t,i));for(var o="";t<i;){var a=e[t++];if(128&a){var s=63&e[t++];if(192!=(224&a)){var c=63&e[t++];if(224==(240&a)?a=(15&a)<<12|s<<6|c:(240!=(248&a)&&Je("Invalid UTF-8 leading byte 0x"+a.toString(16)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),a=(7&a)<<18|s<<12|c<<6|63&e[t++]),a<65536)o+=String.fromCharCode(a);else{var l=a-65536;o+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else o+=String.fromCharCode((31&a)<<6|s)}else o+=String.fromCharCode(a)}return o}function K(e,r){return e?J(t(),e,r):""}function Q(e){B=e,l.HEAP8=new Int8Array(e),l.HEAP16=new Int16Array(e),l.HEAP32=z=new Int32Array(e),l.HEAPU8=H=new Uint8Array(e),l.HEAPU16=new Uint16Array(e),l.HEAPU32=q=new Uint32Array(e),l.HEAPF32=new Float32Array(e),l.HEAPF64=Y=new Float64Array(e)}v&&(B=l.buffer);var X=5242880;l.TOTAL_STACK&&j(X===l.TOTAL_STACK,"the stack size can no longer be determined at runtime");var Z,$=l.INITIAL_MEMORY||16777216;if(C("INITIAL_MEMORY","INITIAL_MEMORY"),j($>=X,"INITIAL_MEMORY should be larger than TOTAL_STACK, was "+$+"! (TOTAL_STACK="+X+")"),j("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&null!=Int32Array.prototype.subarray&&null!=Int32Array.prototype.set,"JS engine does not provide full typed array support"),v)W=l.wasmMemory,B=l.buffer;else if(l.wasmMemory)W=l.wasmMemory;else if(!((W=new WebAssembly.Memory({initial:$/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw L("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),h&&L("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");function ee(){var e=It();j(0==(3&e)),o()[e>>2]=34821223,o()[e+4>>2]=2310721022,o()[0]=1668509029}function te(){if(!G){var e=It(),t=o()[e>>2],r=o()[e+4>>2];34821223==t&&2310721022==r||be("Stack overflow! Stack cookie has been overwritten at 0x"+e.toString(16)+", expected hex dwords 0x89BACDFE and 0x2135467, but received 0x"+r.toString(16)+" 0x"+t.toString(16)),1668509029!==o()[0]&&be("Runtime error: The application has corrupted its heap memory area (address zero)!")}}W&&(B=W.buffer),j(($=B.byteLength)%65536==0),Q(B),function(){var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"}();var re=[],ne=[],ie=[],oe=!1;function ae(){return D}function se(){if(j(!v),l.preRun)for("function"==typeof l.preRun&&(l.preRun=[l.preRun]);l.preRun.length;)ue(l.preRun.shift());je(re)}function ce(){j(!oe),oe=!0,v||(te(),je(ne))}function le(){if(te(),!v){if(l.postRun)for("function"==typeof l.postRun&&(l.postRun=[l.postRun]);l.postRun.length;)fe(l.postRun.shift());je(ie)}}function ue(e){re.unshift(e)}function de(e){ne.unshift(e)}function fe(e){ie.unshift(e)}j(Math.imul,"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),j(Math.fround,"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),j(Math.clz32,"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill"),j(Math.trunc,"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill");var pe=0,me=null,he=null,_e={};function ge(e){pe++,l.monitorRunDependencies&&l.monitorRunDependencies(pe),e?(j(!_e[e]),_e[e]=1,null===me&&"undefined"!=typeof setInterval&&(me=setInterval((function(){if(G)return clearInterval(me),void(me=null);var e=!1;for(var t in _e)e||(e=!0,L("still waiting on run dependencies:")),L("dependency: "+t);e&&L("(end of list)")}),1e4))):L("warning: run dependency added without ID")}function ye(e){if(pe--,l.monitorRunDependencies&&l.monitorRunDependencies(pe),e?(j(_e[e]),delete _e[e]):L("warning: run dependency removed without ID"),0==pe&&(null!==me&&(clearInterval(me),me=null),he)){var t=he;he=null,t()}}function be(e){v?postMessage({cmd:"onAbort",arg:e}):l.onAbort&&l.onAbort(e),L(e="Aborted("+e+")"),G=!0,N=1;var t=new WebAssembly.RuntimeError(e);throw c(t),t}var ve={error:function(){be("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init:function(){ve.error()},createDataFile:function(){ve.error()},createPreloadedFile:function(){ve.error()},createLazyFile:function(){ve.error()},open:function(){ve.error()},mkdev:function(){ve.error()},registerDevice:function(){ve.error()},analyzePath:function(){ve.error()},loadFilesFromDB:function(){ve.error()},ErrnoError:function(){ve.error()}};l.FS_createDataFile=ve.createDataFile,l.FS_createPreloadedFile=ve.createPreloadedFile;var Te,we="data:application/octet-stream;base64,";function Ee(e){return e.startsWith(we)}function Se(e){return e.startsWith("file://")}function ke(e,t){return function(){var r=e,n=t;return t||(n=l.asm),j(oe,"native function `"+r+"` called before runtime initialization"),n[e]||j(n[e],"exported native function `"+r+"` not found"),n[e].apply(null,arguments)}}function Ae(e){try{if(e==Te&&F)return new Uint8Array(F);if(b)return b(e);throw"both async and sync fetching of the wasm failed"}catch(e){be(e)}}function Ie(){if(!F&&(p||m)){if("function"==typeof fetch&&!Se(Te))return fetch(Te,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Te+"'";return e.arrayBuffer()})).catch((function(){return Ae(Te)}));if(y)return new Promise((function(e,t){y(Te,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Ae(Te)}))}function Fe(){var e={env:bt,wasi_snapshot_preview1:bt};function t(e,t){var r=e.exports;if(l.asm=r,Ve(l.asm._emscripten_tls_init),j(Z=l.asm.__indirect_function_table,"table not found in wasm exports"),de(l.asm.__wasm_call_ctors),U=t,!v){var n=Ge.unusedWorkers.length;Ge.unusedWorkers.forEach((function(e){Ge.loadWasmModuleToWorker(e,(function(){--n||ye("wasm-instantiate")}))}))}}v||ge("wasm-instantiate");var r=l;function n(e){j(l===r,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),r=null,t(e.instance,e.module)}function i(t){return Ie().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){L("failed to asynchronously prepare wasm: "+e),Se(Te)&&L("warning: Loading from a file URI ("+Te+") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing"),be(e)}))}if(l.instantiateWasm)try{return l.instantiateWasm(e,t)}catch(e){L("Module.instantiateWasm callback failed with error: "+e),c(e)}return(F||"function"!=typeof WebAssembly.instantiateStreaming||Ee(Te)||Se(Te)||h||"function"!=typeof fetch?i(n):fetch(Te,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return L("wasm streaming compile failed: "+e),L("falling back to ArrayBuffer instantiation"),i(n)}))}))).catch(c),{}}l.locateFile?Ee(Te="emscripten.wasm")||(Te=w(Te)):Te=new URL(r(461),r.b).toString();var Me={};function Le(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Ce(e){j(!v,"Internal Error! killThread() can only ever be called from main application thread!"),j(e,"Internal Error! Null pthread_ptr in killThread!");var t=Ge.pthreads[e];delete Ge.pthreads[e],t.terminate(),kt(e),Ge.runningWorkers.splice(Ge.runningWorkers.indexOf(t),1),t.pthread_ptr=0}function Pe(e){j(!v,"Internal Error! cancelThread() can only ever be called from main application thread!"),j(e,"Internal Error! Null pthread_ptr in cancelThread!"),Ge.pthreads[e].postMessage({cmd:"cancel"})}function Re(e){j(!v,"Internal Error! cleanupThread() can only ever be called from main application thread!"),j(e,"Internal Error! Null pthread_ptr in cleanupThread!");var t=Ge.pthreads[e];j(t),Ge.returnWorkerToPool(t)}function Oe(e){j(!v,"Internal Error! spawnThread() can only ever be called from main application thread!"),j(e.pthread_ptr,"Internal error, no pthread ptr!");var t=Ge.getNewWorker();if(!t)return 6;j(!t.pthread_ptr,"Internal error!"),Ge.runningWorkers.push(t),Ge.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var r={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{r.time=performance.now(),t.postMessage(r,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function xe(e){if(v)return st(1,1,e);N=e,ae()||(Ge.terminateAllThreads(),l.onExit&&l.onExit(e),G=!0),f(e,new Le(e))}function We(e,t){if(N=e,Dt(),!t&&v)throw He(e),"unwind";if(ae()&&!t){var r="program exited (with status: "+e+"), but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)";c(r),L(r)}xe(e)}var Ue=We;function De(e){return"0x"+e.toString(16).padStart(8,"0")}function Ne(e){if(e instanceof Le||"unwind"==e)return N;f(1,e)}var Ge={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){v?Ge.initWorker():Ge.initMainThread()},initMainThread:function(){for(var e=8;e--;)Ge.allocateUnusedWorker()},initWorker:function(){D=!1},setExitStatus:function(e){N=e},terminateAllThreads:function(){for(var e of(j(!v,"Internal Error! terminateAllThreads() can only ever be called from main application thread!"),Object.values(Ge.pthreads)))j(e),Ge.returnWorkerToPool(e);for(var e of(j(0===Object.keys(Ge.pthreads).length),j(0===Ge.runningWorkers.length),Ge.unusedWorkers))j(!e.pthread_ptr),e.terminate();Ge.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete Ge.pthreads[t],Ge.unusedWorkers.push(e),Ge.runningWorkers.splice(Ge.runningWorkers.indexOf(e),1),e.pthread_ptr=0,kt(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){Ge.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=r=>{var n=r.data,i=n.cmd;if(e.pthread_ptr&&(Ge.currentProxiedOperationCallerThread=e.pthread_ptr),n.targetThread&&n.targetThread!=vt()){var o=Ge.pthreads[n.targetThread];return o?o.postMessage(n,n.transferList):L('Internal error! Worker sent a message "'+i+'" to target pthread '+n.targetThread+", but that thread no longer exists!"),void(Ge.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===i?tt(n.queue):"spawnThread"===i?Oe(n):"cleanupThread"===i?Re(n.thread):"killThread"===i?Ce(n.thread):"cancelThread"===i?Pe(n.thread):"loaded"===i?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===i?M("Thread "+n.threadId+": "+n.text):"printErr"===i?L("Thread "+n.threadId+": "+n.text):"alert"===i?alert("Thread "+n.threadId+": "+n.text):"setimmediate"===n.target?e.postMessage(n):"onAbort"===i?l.onAbort&&l.onAbort(n.arg):i&&L("worker sent an unknown command "+i),Ge.currentProxiedOperationCallerThread=void 0},e.onerror=t=>{var r="worker sent an error!";throw e.pthread_ptr&&(r="Pthread "+De(e.pthread_ptr)+" sent an error!"),L(r+" "+t.filename+":"+t.lineno+": "+t.message),t},h&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),j(W instanceof WebAssembly.Memory,"WebAssembly memory should have been loaded by now!"),j(U instanceof WebAssembly.Module,"WebAssembly Module should have been loaded by now!"),e.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob,wasmMemory:W,wasmModule:U})},allocateUnusedWorker:function(){if(l.locateFile){var e=w("emscripten.worker.js");Ge.unusedWorkers.push(new Worker(e))}else Ge.unusedWorkers.push(new Worker(new URL(r.p+r.u(16),r.b)))},getNewWorker:function(){return 0==Ge.unusedWorkers.length&&(L("Tried to spawn a new thread, but the thread pool is exhausted.\nThis might result in a deadlock unless some threads eventually exit or the code explicitly breaks out to the event loop.\nIf you want to increase the pool size, use setting `-sPTHREAD_POOL_SIZE=...`.\nIf you want to throw an explicit error instead of the risk of deadlocking in those cases, use setting `-sPTHREAD_POOL_SIZE_STRICT=2`."),Ge.allocateUnusedWorker(),Ge.loadWasmModuleToWorker(Ge.unusedWorkers[0])),Ge.unusedWorkers.pop()}};function je(e){for(;e.length>0;)e.shift()(l)}function Be(){var e=vt(),t=i()[e+44>>2],r=t-i()[e+48>>2];j(0!=t),j(0!=r),j(t>r,"stackTop must be higher then stackMax"),Mt(t,r),Ct(t),ee()}function He(e){if(v)return st(2,0,e);try{Ue(e)}catch(e){Ne(e)}}l.PThread=Ge,l.establishStackSpace=Be;var ze=[];function qe(e){var t=ze[e];return t||(e>=ze.length&&(ze.length=e+1),ze[e]=t=Z.get(e)),j(Z.get(e)==t,"JavaScript-side Wasm function table mirror is out of date!"),t}function Ye(e,t){var r=qe(e)(t);te(),ae()?Ge.setExitStatus(r):At(r)}function Ve(e){Ge.tlsInitFunctions.push(e)}function Je(e){Je.shown||(Je.shown={}),Je.shown[e]||(Je.shown[e]=1,h&&(e="warning: "+e),L(e))}function Ke(e,t,r,n){be("Assertion failed: "+K(e)+", at: "+[t?K(t):"unknown filename",r,n?K(n):"unknown function"])}function Qe(e){Tt(e,!m,1,!p),Ge.threadInitTLS()}function Xe(e){v?postMessage({cmd:"cleanupThread",thread:e}):Re(e)}l.invokeEntryPoint=Ye;var Ze,$e=!0;function et(){return $e}function tt(e){Atomics.store(i(),e>>2,1),vt()&&St(e),Atomics.compareExchange(i(),e>>2,1,0)}function rt(e,t,r,n){if(e==t)setTimeout((()=>tt(n)));else if(v)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:n});else{var i=Ge.pthreads[e];if(!i)return void L("Cannot send message to thread with ID "+e+", unknown thread ID!");i.postMessage({cmd:"processProxyingQueue",queue:n})}return 1}function nt(e,t,r){return L("emscripten_set_offscreencanvas_size: Build with -sOFFSCREENCANVAS_SUPPORT=1 to enable transferring canvases to pthreads."),-1}function it(){return Date.now()}function ot(e,r,n){t().copyWithin(e,r,r+n)}function at(e){var t=Lt(),r=e();return Ct(t),r}function st(e,t){var r=arguments.length-2,n=arguments;if(r>19)throw"emscripten_proxy_to_main_thread_js: Too many arguments "+r+" to proxied function idx="+e+", maximum supported is 19!";return at((()=>{for(var i=r,o=Pt(8*i),s=o>>3,c=0;c<r;c++){var l=n[2+c];a()[s+c]=l}return Et(e,i,o,t)}))}l.executeNotifiedProxyingQueue=tt,Ze=h?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:v?()=>performance.now()-l.__performance_now_clock_drift:()=>performance.now();var ct=[];function lt(e,t,r){ct.length=t;for(var n=r>>3,i=0;i<t;i++)ct[i]=a()[n+i];var o=e<0?Me[-e-1]:gt[e];return j(o.length==t,"Call args mismatch in emscripten_receive_on_main_thread_js"),o.apply(null,ct)}function ut(e){try{return W.grow(e-B.byteLength+65535>>>16),Q(W.buffer),1}catch(t){L("emscripten_realloc_buffer: Attempted to grow heap from "+B.byteLength+" bytes to "+e+" bytes, but got error: "+t)}}function dt(e){var r=t().length;if((e>>>=0)<=r)return!1;var n,i=2147483648;if(e>i)return L("Cannot enlarge memory, asked to go up to "+e+" bytes, but the limit is 2147483648 bytes!"),!1;for(var o=1;o<=4;o*=2){var a=r*(1+.2/o);a=Math.min(a,e+100663296);var s=Math.min(i,(n=Math.max(e,a))+(65536-n%65536)%65536);if(ut(s))return!0}return L("Failed to grow the heap from "+r+" bytes to "+s+" bytes, not enough memory!"),!1}function ft(){throw"unwind"}var pt=[null,[],[]];function mt(e,t){var r=pt[e];j(r),0===t||10===t?((1===e?M:L)(J(r,0)),r.length=0):r.push(t)}function ht(){wt(0),pt[1].length&&mt(1,10),pt[2].length&&mt(2,10)}function _t(e,r,n,i){if(v)return st(3,1,e,r,n,i);for(var a=0,s=0;s<n;s++){var c=o()[r>>2],l=o()[r+4>>2];r+=8;for(var u=0;u<l;u++)mt(e,t()[c+u]);a+=l}return o()[i>>2]=a,0}Ge.init();var gt=[null,xe,He,_t];function yt(){P("fetchSettings")}var bt={__assert_fail:Ke,__emscripten_init_main_thread_js:Qe,__emscripten_thread_cleanup:Xe,_emscripten_get_now_is_monotonic:et,_emscripten_notify_task_queue:rt,_emscripten_set_offscreencanvas_size:nt,emscripten_date_now:it,emscripten_get_now:Ze,emscripten_memcpy_big:ot,emscripten_receive_on_main_thread_js:lt,emscripten_resize_heap:dt,emscripten_unwind_to_js_event_loop:ft,exit:Ue,fd_write:_t,memory:W||l.wasmMemory},vt=(Fe(),l.___wasm_call_ctors=ke("__wasm_call_ctors"),l.__Z3runv=ke("_Z3runv"),l.__emscripten_tls_init=ke("_emscripten_tls_init"),l._pthread_self=ke("pthread_self")),Tt=(l.___errno_location=ke("__errno_location"),l.__emscripten_thread_init=ke("_emscripten_thread_init")),wt=(l.__emscripten_thread_crashed=ke("_emscripten_thread_crashed"),l._fflush=ke("fflush")),Et=(l._emscripten_main_browser_thread_id=ke("emscripten_main_browser_thread_id"),l._emscripten_main_thread_process_queued_calls=ke("emscripten_main_thread_process_queued_calls"),l._emscripten_run_in_main_runtime_thread_js=ke("emscripten_run_in_main_runtime_thread_js")),St=(l._emscripten_dispatch_to_thread_=ke("emscripten_dispatch_to_thread_"),l.__emscripten_proxy_execute_task_queue=ke("_emscripten_proxy_execute_task_queue")),kt=l.__emscripten_thread_free_data=ke("_emscripten_thread_free_data"),At=l.__emscripten_thread_exit=ke("_emscripten_thread_exit"),It=(l._malloc=ke("malloc"),l._free=ke("free"),l._emscripten_stack_get_base=function(){return(l._emscripten_stack_get_base=l.asm.emscripten_stack_get_base).apply(null,arguments)},l._emscripten_stack_get_end=function(){return(It=l._emscripten_stack_get_end=l.asm.emscripten_stack_get_end).apply(null,arguments)}),Ft=l._emscripten_stack_init=function(){return(Ft=l._emscripten_stack_init=l.asm.emscripten_stack_init).apply(null,arguments)},Mt=l._emscripten_stack_set_limits=function(){return(Mt=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Lt=(l._emscripten_stack_get_free=function(){return(l._emscripten_stack_get_free=l.asm.emscripten_stack_get_free).apply(null,arguments)},l.stackSave=ke("stackSave")),Ct=l.stackRestore=ke("stackRestore"),Pt=l.stackAlloc=ke("stackAlloc");l.dynCall_jiji=ke("dynCall_jiji"),l.keepRuntimeAlive=ae,l.wasmMemory=W,l.ExitStatus=Le,l.PThread=Ge;var Rt=["run","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","addOnPreRun","addOnInit","addOnPreMain","addOnExit","addOnPostRun","addRunDependency","removeRunDependency","FS_createFolder","FS_createPath","FS_createDataFile","FS_createPreloadedFile","FS_createLazyFile","FS_createLink","FS_createDevice","FS_unlink","getLEB","getFunctionTables","alignFunctionTables","registerFunctions","prettyPrint","getCompilerSetting","print","printErr","callMain","abort","stackAlloc","stackSave","stackRestore","getTempRet0","setTempRet0","GROWABLE_HEAP_I8","GROWABLE_HEAP_U8","GROWABLE_HEAP_I16","GROWABLE_HEAP_U16","GROWABLE_HEAP_I32","GROWABLE_HEAP_U32","GROWABLE_HEAP_F32","GROWABLE_HEAP_F64","writeStackCookie","checkStackCookie","ptrToString","zeroMemory","stringToNewUTF8","exitJS","getHeapMax","emscripten_realloc_buffer","ENV","ERRNO_CODES","ERRNO_MESSAGES","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","DNS","getHostByName","Protocols","Sockets","getRandomDevice","warnOnce","traverseStack","UNWIND_CACHE","convertPCtoSourceLocation","readAsmConstArgsArray","readAsmConstArgs","mainThreadEM_ASM","jstoi_q","jstoi_s","getExecutableName","listenOnce","autoResumeAudioContext","dynCallLegacy","getDynCaller","dynCall","handleException","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","safeSetTimeout","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","freeTableIndexes","functionsInTableMap","getEmptyTableSlot","updateTableMap","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","setValue","getValue","PATH","PATH_FS","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16Decoder","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","allocateUTF8","allocateUTF8OnStack","writeStringToMemory","writeArrayToMemory","writeAsciiToMemory","SYSCALLS","getSocketFromFD","getSocketAddress","JSEvents","registerKeyEventCallback","specialHTMLTargets","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","currentFullscreenStrategy","restoreOldWindowedStyle","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","demangle","demangleAll","jsStackTrace","stackTrace","getEnvStrings","checkWasiClock","flush_NO_FILESYSTEM","dlopenMissingError","createDyncallWrapper","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","uncaughtExceptionCount","exceptionLast","exceptionCaught","ExceptionInfo","exception_addRef","exception_decRef","Browser","setMainLoop","wget","FS","MEMFS","TTY","PIPEFS","SOCKFS","_setNetworkCallback","tempFixedLengthArray","miniTempWebGLFloatBuffers","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","GL","emscriptenWebGLGet","computeUnpackAlignedImageSize","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","writeGLArray","AL","SDL_unicode","SDL_ttfContext","SDL_audio","SDL","SDL_gfx","GLUT","EGL","GLFW_Window","GLFW","GLEW","IDBStore","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","killThread","cleanupThread","registerTLSInit","cancelThread","spawnThread","exitOnMainThread","invokeEntryPoint","executeNotifiedProxyingQueue"];Rt.forEach(x);var Ot,xt=["stringToNewUTF8","setErrNo","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","getHostByName","getRandomDevice","traverseStack","convertPCtoSourceLocation","readAsmConstArgs","mainThreadEM_ASM","jstoi_q","jstoi_s","getExecutableName","listenOnce","autoResumeAudioContext","dynCallLegacy","getDynCaller","dynCall","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","safeSetTimeout","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","getCFunc","ccall","cwrap","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","allocateUTF8","allocateUTF8OnStack","writeStringToMemory","writeArrayToMemory","writeAsciiToMemory","getSocketFromFD","getSocketAddress","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","findCanvasEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","demangle","demangleAll","jsStackTrace","stackTrace","getEnvStrings","checkWasiClock","createDyncallWrapper","setImmediateWrapped","clearImmediateWrapped","polyfillSetImmediate","ExceptionInfo","exception_addRef","exception_decRef","setMainLoop","_setNetworkCallback","heapObjectForWebGLType","heapAccessShiftForWebGLHeap","emscriptenWebGLGet","computeUnpackAlignedImageSize","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","writeGLArray","SDL_unicode","SDL_ttfContext","SDL_audio","GLFW_Window","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate"];function Wt(){j(!v),Ft(),ee()}function Ut(e){if(e=e||d,!(pe>0)){if(v||Wt(),v)return s(l),ce(),void postMessage({cmd:"loaded"});se(),pe>0||(l.setStatus?(l.setStatus("Running..."),setTimeout((function(){setTimeout((function(){l.setStatus("")}),1),t()}),1)):t(),te())}function t(){Ot||(Ot=!0,l.calledRun=!0,G||(ce(),s(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),j(!l._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),le()))}}function Dt(){var e=M,t=L,r=!1;M=L=e=>{r=!0};try{ht()}catch(e){}M=e,L=t,r&&(Je("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc."),Je("(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)"))}if(xt.forEach(O),he=function e(){Ot||Ut(),Ot||(he=e)},l.preInit)for("function"==typeof l.preInit&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();return Ut(),e.ready})},461:(e,t,r)=>{"use strict";e.exports=r.p+"cd8e91a64ab4feb7f6bd.wasm"},338:()=>{}}]);